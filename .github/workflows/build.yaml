name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - "release/**"
  workflow_dispatch:

jobs:
  py-ruff:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies with uv
        run: uv sync --dev
      - name: Lint with Ruff
        run: uv run ruff check .
      - name: Format with Ruff
        run: uv run ruff format --check .

  py-type:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies with uv
        run: uv sync --dev
      - name: Type check with pyright
        run: uv run pyright

  py-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Cache uv dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock', '**/pyproject.toml') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies with uv
        run: uv sync --dev
      - name: Run tests
        run: uv run pytest

  py-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install build dependencies
        run: uv pip install --system build
      - name: Build package
        run: python -m build
      - name: Verify package
        run: |
          uv pip install --system dist/*.whl
          python -c "import inspect_scout; print('Package imported successfully')"
